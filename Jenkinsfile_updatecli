final String cronExpr = env.BRANCH_IS_PRIMARY ? 'H/30 * * * *' : ''

properties([
    buildDiscarder(logRotator(numToKeepStr: '10')),
    disableConcurrentBuilds(abortPrevious: true),
    pipelineTriggers([cron(cronExpr)]),
])

node('jnlp-linux-arm64') {
    timeout(time: 30, unit: 'MINUTES') {
        withCredentials([
            azureServicePrincipal('updatecli-azure-serviceprincipal'), // needed for Azure login
            usernamePassword(
                credentialsId: 'github-app-updatecli-on-jenkins-infra', // needed for updatecli
                usernameVariable: 'USERNAME_VALUE',
                passwordVariable: 'UPDATECLI_GITHUB_TOKEN'
            )
        ]) {
            // Preliminary Azure login steps
            sh 'az login --service-principal -u "$AZURE_CLIENT_ID" -p "$AZURE_CLIENT_SECRET" -t "$AZURE_TENANT_ID"'
            sh 'az account set -s "$AZURE_SUBSCRIPTION_ID"'
            final String updatecliAction = env.BRANCH_IS_PRIMARY ? 'apply' : 'diff'
            stage("Run updatecli action: ${updatecliAction}") {
                updatecli(
                    action: updatecliAction,
                    runInCurrentAgent: true,
                )
            }
        }
    }
}
